Compiled Ruleset @602
Compiled Rule
	--atommatch:
	--memmatch:
		spec           [1, 1]
		jump           [L132, [0], [], []]
	--guard:L132:
		spec           [1, 1]
		jump           [L133, [0], [], []]
	--body:L133:
		spec           [1, 17]
		commit         ["_init", 0]
		loadruleset    [0, @601]
		newatom      [1, 0, 'listp'_2]
		newatom      [2, 0, 'a'_5]
		newatom      [3, 0, 'nil'_2]
		newatom      [4, 0, 1_1]
		newatom      [5, 0, 'listp'_2]
		newatom      [6, 0, 'a'_5]
		newatom      [7, 0, 'nil'_2]
		newatom      [8, 0, 1_1]
		newatom      [9, 0, 'listp'_2]
		newatom      [10, 0, 'a'_5]
		newatom      [11, 0, 'nil'_2]
		newatom      [12, 0, 1_1]
		newatom      [13, 0, 'listp'_2]
		newatom      [14, 0, 'a'_5]
		newatom      [15, 0, 'nil'_2]
		newatom      [16, 0, 1_1]
		newlink        [1, 0, 2, 4, 0]
		newlink        [1, 1, 2, 3, 0]
		newlink        [2, 0, 3, 1, 0]
		newlink        [2, 1, 3, 0, 0]
		newlink        [2, 2, 4, 0, 0]
		newlink        [5, 0, 6, 4, 0]
		newlink        [5, 1, 6, 3, 0]
		newlink        [6, 0, 7, 1, 0]
		newlink        [6, 1, 7, 0, 0]
		newlink        [6, 2, 8, 0, 0]
		newlink        [9, 0, 10, 4, 0]
		newlink        [9, 1, 10, 3, 0]
		newlink        [10, 0, 11, 1, 0]
		newlink        [10, 1, 11, 0, 0]
		newlink        [10, 2, 12, 0, 0]
		newlink        [13, 0, 14, 4, 0]
		newlink        [13, 1, 14, 3, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 15, 0, 0]
		newlink        [14, 2, 16, 0, 0]
		proceed        []
Compiled Ruleset @601
Compiled Rule
	--atommatch:
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'listp'_2]
        getlink      [2, 1, 0]
        getlink      [3, 1, 1]
        subrule      [4, 0, "skiplist", [0, 1, 2, 3]]
		proceed        []
Compiled Subrule @skiplist
		spec           [4, 10]
		branch[[
            subrule  [4, 0, "skiplist_0", [0, 1, 2, 3]]
            succreturn [4]
        ]]
        branch[[
            dereflink  [4, 2, 4]
            func [4, 'a'_5]
            getlink    [5, 4, 3]
            ispairedlink [3, 5]
            derefatom  [6, 4, 2]
            isint [6]
            getlink    [7, 4, 0]
            getlink    [8, 4, 1]
            subrule    [9, 0, "skiplist", [0, 1, 7, 8]]
            succreturn [9]
        ]]
        branch[[
            dereflink  [4, 2, 2]
            func       [4, 'b'_3]
            derefatom  [5, 4, 1]
            isint      [5]
            getlink    [6, 4, 0]
            subrule    [7, 0, "skiplist", [0, 1, 6, 3]]
            succreturn [7]
        ]]
        failreturn []
Compiled Subrule @skiplist_0
		spec           [4, 7]
		dereflink      [4, 2, 1]
        func           [4, 'nil'_2]
        getlink        [5, 4, 0]
        ispairedlink   [5, 3]
        branch [[
            subrule        [6, 0, "skiplist_1", [0, 1, 4]]
            succreturn     [6]
        ]]
        failreturn     []
Compiled Subrule @skiplist_1
        spec           [3, 7]
        findatom       [3, 0, 'listp'_2]
        neqatom        [1, 3]
        getlink        [4, 3, 0]
        getlink        [5, 3, 1]
        branch [[
            subrule        [6, 0, "skiplist_2", [0, 1, 2, 3, 4, 5]]
            succreturn     [6]
        ]]
        failreturn     []
Compiled Subrule @skiplist_2
		spec           [6, 12]
		branch[[
            subrule  [6, 0, "skiplist_3", [0, 1, 2, 3, 4, 5]]
            succreturn [6]
        ]]
        branch[[
            dereflink  [6, 4, 4]
            func [6, 'a'_5]
            getlink    [7, 6, 3]
            ispairedlink [5, 7]
            derefatom  [8, 6, 2]
            isint [8]
            getlink    [9, 6, 0]
            getlink    [10, 6, 1]
            subrule    [11, 0, "skiplist_2", [0, 1, 2, 3, 9, 10]]
            succreturn [11]
        ]]
        branch[[
            dereflink  [6, 4, 2]
            func       [6, 'b'_3]
            derefatom  [7, 6, 1]
            isint      [7]
            getlink    [8, 6, 0]
            subrule    [9, 0, "skiplist_2", [0, 1, 2, 3, 8, 5]]
            succreturn [9]
        ]]
        failreturn []
Compiled Subrule @skiplist_3
        spec           [6, 9]
	    dereflink      [6, 4, 1]
        func           [6, 'nil'_2]
        getlink        [7, 6, 0]
        ispairedlink   [7, 5]
        commit         ["append", 0]
        removeatom     [2, 0]
        removeatom     [3, 0]
        unify          [2, 0, 2, 1, 0]
        unify          [3, 1, 3, 0, 0]
        freeatom       [2]
        freeatom       [3]
        subrule        [8, 0, "skiplist_1", [0, 1, 6]]
        succreturn     []