

#include <iostream>
#include <string>
#include <unordered_map>


/*
    // 推移閉包計算 アトムの個数を格納（bool ではなく int）
    // edge(A,B), edge(B2,C) \:- B =:= B2, int(A), int(C), uniq(A,B,C) | edge(A,C).
    
    (1,2),(1,3),(1,4),(1,5),(2,1),(2,3),(3,5),(4,1).
    -> 
    (1,5),(1,5),(1,5),(1,3),(1,3),(1,1),(1,5),(1,5),(1,3),(1,2),(1,1),(1,3),(1,4),(4,5),(4,1),(1,1),(4,1),(1,2),(1,2),
    (1,4),(2,5),(2,5),(1,4),(1,4),(1,2),(4,5),(3,5),(2,3),(2,3),(2,5),(4,5),(4,5),(2,5),(4,3),(4,3),(2,3),(2,1),(2,1),
    (2,1),(4,1),(4,1),(2,1),(4,2),(2,3),(4,3),(4,2),(4,4),(4,4),(2,4),(4,2),(2,2),(2,2),(2,2),(2,4),(2,4),(4,4).


        1 2 3 4 5              1 2 3 4 5
       -----------            ----------
    1 | 0 1 1 1 1          1 | 3 4 4 4 5
    2 | 1 0 1 0 0          2 | 4 3 4 3 4 
    3 | 0 0 0 0 1   --->   3 | 0 0 0 0 1 
    4 | 1 0 0 0 0          4 | 4 3 3 3 4
    5 | 0 0 0 1 0          5 | 0 0 0 0 0


    計算イメージ
    ワーシャルフロイドでは，k を通って i から j に行く経路のコストを見て更新していく
    今回は，k を通って i から j に到達する経路の数を更新していく？

    src1                   src2                    dst
    [2] 1 2 3 4 5           1 2 3 4 5               1 2 3 4 5
       -----------         ----------              ----------
    1 | 0 1 1 1 1       1 | 0 1 1 1 1           1 | 0 1 1 1 1
    2 | 1 0 1 0 0       2 | 1 0 1 0 0           2 | 1 0 1 0 0 
    3 | 0 0 0 0 1       3 | 0 0 0 0 1           3 | 0 0 0 0 1 
    4 | 1 0 0 0 0       4 | 1 0 0 0 0           4 | 1 0 0 0 0
    5 | 0 0 0 1 0       5 | 0 0 0 1 0           5 | 0 0 0 1 0
    uniq_table = {}
    -------> i = 1 について計算, if(src[i][j]>0 && src[j][k]>0){dst[i][k]++;} 
    [2] 1 2 3 4 5           1 2 3 4 5               1 2 3 4 5
       -----------         ----------              ----------
    1 | 0 1 1 1 1       1 | 0 1 1 1 1           1 | 0 1 1 1 1
    2 | 1 0 1 0 0       2 | 1 0 1 0 0           2 | 1 0 1 0 0 
    3 | 0 0 0 0 1       3 | 0 0 0 0 1           3 | 0 0 0 0 1 
    4 | 1 0 0 0 0       4 | 1 0 0 0 0           4 | 1 0 0 0 0
    5 | 0 0 0 1 0       5 | 0 0 0 1 0           5 | 0 0 0 1 0


*/

void calc_tc(int** src, int** dst){

}